---
// Keep the existing props and scripts
const props = {
  landingImageSrc: "/img/hero-mountains1.jpg",
  herotagline1: "Reconnecting Youth with Nature, Purpose, & Growth",
  herotagline2: "excitement, teamwork, and personal growth",
  herobuttontext: "Choose Your Adventure",
};
const images = [
  "/img/hero-mountains1.jpg",
  "/img/hero-mountains2.jpg",
  "/img/hero-mountains3.jpg",
];
---

<section
  id="home"
  class="relative min-h-[80vh] flex items-center justify-center bg-cover bg-center bg-no-repeat"
  style={`background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url('${props.landingImageSrc}')`}
>
  <!-- Left Arrow -->
  <button
    id="prev-arrow"
    class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-gray-700 text-white p-2 rounded-full hover:bg-gray-800 transition"
    aria-label="Previous"
  >
    &#8249;
  </button>

  <!-- Right Arrow -->
  <button
    id="next-arrow"
    class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-gray-700 text-white p-2 rounded-full hover:bg-gray-800 transition"
    aria-label="Next"
  >
    &#8250;
  </button>

  <div class="container mx-auto px-4 text-center">
    <div class="py-16">
      <h1
        class="text-4xl md:text-5xl font-bold text-white mb-4 capitalize"
        data-aos="slide-up"
        data-aos-offset="120"
        data-aos-delay="0"
        data-aos-duration="400"
        data-aos-easing="ease-in-out"
        data-aos-once="true"
      >
        {props.herotagline1}
      </h1>
      <p
        class="text-lg md:text-2xl text-gray-300 mb-8 capitalize"
        data-aos="slide-up"
        data-aos-offset="120"
        data-aos-delay="50"
        data-aos-duration="400"
        data-aos-easing="ease-in-out"
        data-aos-once="true"
      >
        {props.herotagline2}
      </p>
      <div
        data-aos="slide-up"
        data-aos-offset="120"
        data-aos-delay="150"
        data-aos-duration="400"
        data-aos-easing="ease-in-out"
        data-aos-once="true"
      >
        <a
          href="#services"
          class="inline-block px-8 py-4 bg-green-500 text-white font-semibold rounded shadow hover:bg-green-600 transition uppercase"
        >
          {props.herobuttontext}
        </a>
      </div>
    </div>
  </div>

  <!-- Dots Navigation -->
  <div
    class="absolute bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2"
  >
    {
      images.map((_, index) => (
        <span
          key={index}
          class="dot w-3 h-3 rounded-full bg-white bg-opacity-50 hover:bg-opacity-100 transition cursor-pointer"
          data-index={index}
        />
      ))
    }
  </div>
</section>

<script>
  const images = [
    "/img/hero-mountains1.jpg",
    "/img/hero-mountains2.jpg",
    "/img/hero-mountains3.jpg",
  ];
  const section = document.getElementById("home");
  const dots = document.querySelectorAll(".dot");
  let currentIndex = 0;
  let intervalId;

  // Function to update the background image and active dot
  const updateBackground = () => {
    section.style.transition = "background-image 1s ease-in-out";
    section.style.backgroundImage = `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url('${images[currentIndex]}')`;

    // Update dot active state
    dots.forEach((dot, index) => {
      dot.classList.toggle("bg-opacity-100", index === currentIndex);
      dot.classList.toggle("bg-opacity-50", index !== currentIndex);
    });
  };

  // Function to start the auto-advance carousel
  const startAutoAdvance = () => {
    intervalId = setInterval(() => {
      currentIndex = (currentIndex + 1) % images.length;
      updateBackground();
    }, 10000);
  };

  // Function to stop the auto-advance carousel
  const stopAutoAdvance = () => {
    clearInterval(intervalId);
  };

  // Event listeners for arrows
  document.getElementById("prev-arrow").addEventListener("click", () => {
    stopAutoAdvance();
    currentIndex = (currentIndex - 1 + images.length) % images.length;
    updateBackground();
    startAutoAdvance();
  });

  document.getElementById("next-arrow").addEventListener("click", () => {
    stopAutoAdvance();
    currentIndex = (currentIndex + 1) % images.length;
    updateBackground();
    startAutoAdvance();
  });

  // Event listeners for dots
  dots.forEach((dot) => {
    dot.addEventListener("click", (e) => {
      stopAutoAdvance();
      currentIndex = parseInt(e.target.getAttribute("data-index"));
      updateBackground();
      startAutoAdvance();
    });
  });

  // Initialize the carousel
  updateBackground(); // Set initial background and dot
  startAutoAdvance(); // Start auto-advance
</script>
